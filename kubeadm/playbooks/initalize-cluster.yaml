- hosts: master
  become: yes
  gather_facts: false
  tasks:
    - name: send kubeadm init config file to master
      copy:
        src: ../kubeadm-config/kubeadm-init.yml
        dest: ~/kubeadm-init.yml

    - name: initialize the cluster with config file
      shell: kubeadm init --config kubeadm-init.yml >> kubeadm-init.log
      register: kubeadm_init
      args:
        chdir: $HOME
        creates: kubeadm-init.log

    - name: create .kube directory
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to master's kube config
      when: kubeadm_init is succeeded
      copy:
        src: /etc/kubernetes/admin.conf
        dest: $HOME/.kube/config
        remote_src: yes

    - name: copy admin.conf to ansible client host's kube config
      when: kubeadm_init is succeeded
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        flat: yes

    - name: get --discovery-token-ca-cert-hash from join command
      when: kubeadm_init is succeeded
      shell: kubeadm token create --print-join-command | sed 's/.*--discovery-token-ca-cert-hash //' | awk '{print $1}'
      register: discovery_token_ca_cert_hash

    - debug:
        var: discovery_token_ca_cert_hash

- hosts: 127.0.0.1
  connection: local
  tasks:
    - name: update join-config.yml with discovery_token_ca_cert_hash
      shell: |
        YML=`cat kubeadm-config/kubeadm-init.yml` &&\
        YML=`echo "YML" | yq 'discovery.bootstrapToken.caCertHashes = [ "{{ discovery_token_ca_cert_hash.stdout }}" ]'` &&\
        echo "$YML" > kubeadm-config/kubeadm-init.yml

- hosts: workers
  become: yes
  tasks:
  - name: send kubeadm join config file to master
    copy:
      src: ../kubeadm-config/kubeadm-join.yml
      dest: ~/kubeadm-join.yml

  - name: join cluster
    shell: kubeadm join --config kubeadm-join.yml >> kubeadm-join.log
    args:
      chdir: $HOME
      creates: kubeadm-join.log
