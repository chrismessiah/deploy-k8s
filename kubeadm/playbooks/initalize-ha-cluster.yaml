- hosts: master_main
  become: yes
  gather_facts: false
  tasks:
    - name: send kubeadm init config file to main master
      copy:
        src: ../kubeadm-init.yml
        dest: ~/kubeadm-init.yml

    - name: initialize the cluster with config file
      shell: kubeadm init --config kubeadm-init.yml --upload-certs >> kubeadm-init.log
      register: kubeadm_init
      args:
        chdir: $HOME
        creates: kubeadm-init.log

    - name: create .kube directory
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to master's kube config
      when: kubeadm_init is succeeded
      copy:
        src: /etc/kubernetes/admin.conf
        dest: $HOME/.kube/config
        remote_src: yes

    - name: copy admin.conf to ansible client host's kube config
      when: kubeadm_init is succeeded
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        flat: yes

    - name: get --discovery-token-ca-cert-hash from join command
      when: kubeadm_init is succeeded
      shell: kubeadm token create --print-join-command | sed 's/.*--discovery-token-ca-cert-hash //' | awk '{print $1}'
      register: discovery_token_ca_cert_hash

    - name: get --certificate-key from init log
      when: kubeadm_init is succeeded
      shell: cat kubeadm-init.log | grep -- --certificate-key | awk '{print $3}'
      register: certificate_key

- hosts: masters_fallback
  become: yes
  tasks:
    - set_fact: cert_hash={{ hostvars['master1'].discovery_token_ca_cert_hash }}
    - set_fact: cert_key={{ hostvars['master1'].certificate_key }}
    - set_fact: lb_ip={{ hostvars['loadbalancer'].ansible_host }}

    - name: join fallback master to cluster
      shell: kubeadm join {{ lb_ip }}:6443 --token {{ kubeadm_token }} --discovery-token-ca-cert-hash {{ cert_hash.stdout }} --control-plane --certificate-key {{ cert_key.stdout }} >> kubeadm-join-master.log
      args:
        chdir: $HOME
        creates: kubeadm-join-master.log

- hosts: workers
  become: yes
  tasks:
    - set_fact: cert_hash={{ hostvars['master1'].discovery_token_ca_cert_hash }}
    - set_fact: lb_ip={{ hostvars['master1'].ansible_host }}

    - name: join worker node to cluster
      shell: kubeadm join {{ lb_ip }}:6443 --token {{ kubeadm_token }} --discovery-token-ca-cert-hash {{ cert_hash.stdout }} >> kubeadm-join.log
      args:
        chdir: $HOME
        creates: kubeadm-join.log
